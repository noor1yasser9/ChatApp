package com.example.nurbk.ps.chatapp.ui.activityimport android.graphics.Colorimport android.os.Buildimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.util.Logimport android.view.Menuimport android.view.MenuItemimport android.view.Viewimport androidx.lifecycle.ViewModelProviderimport androidx.navigation.NavControllerimport androidx.navigation.Navigationimport androidx.navigation.fragment.findNavControllerimport androidx.navigation.ui.setupWithNavControllerimport com.example.nurbk.ps.chatapp.Rimport com.example.nurbk.ps.chatapp.ui.fragment.CreateGenreDialogimport com.example.nurbk.ps.chatapp.unit.Constantsimport com.example.nurbk.ps.chatapp.viewModel.MainActivityViewModelimport kotlinx.android.synthetic.main.activity_main.*class MainActivity : AppCompatActivity() {    lateinit var viewModel: MainActivityViewModel    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_main)        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            window.decorView.systemUiVisibility = View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR        } else {            window.statusBarColor = Color.WHITE        }        bottomNavigationView.setupWithNavController(fragment_container.findNavController())        viewModel = ViewModelProvider(this)[MainActivityViewModel::class.java]        setSupportActionBar(toolbarMain)        title = " "    }    override fun onResume() {        super.onResume()        viewModel.updateUser(            Constants.mAuth.uid!!, mutableMapOf("statusUser" to 1)        )    }    override fun onStop() {        viewModel.updateUser(Constants.mAuth.uid!!, mutableMapOf("statusUser" to 0))        super.onStop()    }    override fun onCreateOptionsMenu(menu: Menu?): Boolean {        menuInflater.inflate(R.menu.create_group, menu)        return true    }    override fun onOptionsItemSelected(item: MenuItem): Boolean {        when (item.itemId) {            R.id.createGroup -> {                val createDialog = CreateGenreDialog()                createDialog.show(supportFragmentManager, "")            }        }        return super.onOptionsItemSelected(item)    }}