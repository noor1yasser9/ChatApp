package com.example.nurbk.ps.chatapp.ui.fragmentimport android.app.ProgressDialogimport android.os.Bundleimport android.text.Editableimport android.text.TextWatcherimport android.util.Patternsimport androidx.fragment.app.Fragmentimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.lifecycle.Observerimport androidx.navigation.NavControllerimport androidx.navigation.Navigationimport com.example.nurbk.ps.chatapp.model.Userimport com.example.nurbk.ps.chatapp.Rimport com.example.nurbk.ps.chatapp.ui.activity.AuthActivityimport com.example.nurbk.ps.chatapp.viewModel.AuthActivityViewModelimport kotlinx.android.synthetic.main.fragment_sign_up.*import java.util.*class SignUpFragment : Fragment(), TextWatcher {    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        // Inflate the layout for this fragment        return inflater.inflate(R.layout.fragment_sign_up, container, false)    }    private lateinit var viewModel: AuthActivityViewModel    private lateinit var navigationController: NavController    private val TAG = "SignUpFragment"    private lateinit var progressDialog: ProgressDialog    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        viewModel = (requireActivity() as AuthActivity).viewModel        navigationController = Navigation.findNavController(view)        progressDialog = ProgressDialog(requireActivity())        viewModel.isSignUp.observe(requireActivity(), Observer {            progressDialog.dismiss()            if (it) {                requireActivity().onBackPressed()            }        })        txtNameSignUp.addTextChangedListener(this)        txtEmailSignUp.addTextChangedListener(this)        txtPasswordSignUp.addTextChangedListener(this)        btnSignUp.setOnClickListener {            val name = txtNameSignUp.text.toString().trim()            val email = txtEmailSignUp.text.toString().trim()            val password = txtPasswordSignUp.text.toString().trim()            if (name.isEmpty()) {                txtNameSignUp.error = "Name Required"                txtNameSignUp.requestFocus()                return@setOnClickListener            }            if (email.isEmpty()) {                txtEmailSignUp.error = "Name Required"                txtEmailSignUp.requestFocus()                return@setOnClickListener            }            if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {                txtEmailSignUp.error = "Please Enter a Valid Email"                txtEmailSignUp.requestFocus()                return@setOnClickListener            }            if (password.length < 6) {                txtPasswordSignUp.error = "6 Char Required"                txtPasswordSignUp.requestFocus()                return@setOnClickListener            }            progressDialog.setMessage("Sign Up ....")            progressDialog.setCancelable(false)            progressDialog.show()            viewModel.createNewAccount(                User(                    name,                    email,                    password,                    " ",                    " ",                    "",                    "No Message",                    Date(0),                    0                )            )        }    }    override fun afterTextChanged(s: Editable?) {    }    override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {    }    override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {        btnSignUp.isEnabled = txtNameSignUp.text.trim().isNotEmpty() &&                txtEmailSignUp.text.trim().isNotEmpty() &&                txtPasswordSignUp.text.trim().isNotEmpty()    }}