package com.example.nurbk.ps.chatapp.ui.fragmentimport android.os.Bundleimport android.util.Logimport androidx.fragment.app.Fragmentimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.appcompat.app.AppCompatActivityimport androidx.lifecycle.Observerimport androidx.lifecycle.ViewModelimport androidx.navigation.NavControllerimport androidx.navigation.Navigationimport androidx.recyclerview.widget.LinearLayoutManagerimport com.bumptech.glide.Glideimport com.example.nurbk.ps.chatapp.Rimport com.example.nurbk.ps.chatapp.adapter.UsersAdapterimport com.example.nurbk.ps.chatapp.ui.activity.MainActivityimport com.example.nurbk.ps.chatapp.unit.Constantsimport com.example.nurbk.ps.chatapp.viewModel.MainActivityViewModelimport kotlinx.android.synthetic.main.activity_main.*import kotlinx.android.synthetic.main.fragment_list_chat.*class ListChatFragment : Fragment() {    private lateinit var viewModel: MainActivityViewModel    private lateinit var navController: NavController    private val adapter by lazy {        UsersAdapter()    }    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        return inflater.inflate(R.layout.fragment_list_chat, container, false)    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        viewModel = (requireActivity() as MainActivity).viewModel        navController = Navigation.findNavController(view)        requireActivity().btnImageProfile.visibility = View.VISIBLE        requireActivity().bottomNavigationView.visibility = View.VISIBLE        (activity as AppCompatActivity).supportActionBar!!            .setDisplayHomeAsUpEnabled(false)        requireActivity().titleToolbar.text = "Chats"        viewModel.profileUserLiveData.observe(requireActivity(), Observer {            Glide.with(requireActivity())                .load(it.profileImage)                .centerCrop()                .placeholder(R.drawable.ic_account_circle_black_24dp)                .into(requireActivity().btnImageProfile)//            viewModel.getAllUser()        })        rcChats.layoutManager = LinearLayoutManager(requireContext())        rcChats.adapter = adapter        rcChats.setHasFixedSize(true)        viewModel.getAllUserLiveData.observe(requireActivity(), Observer { list ->            adapter.differ.submitList(list)        })        adapter.setOnItemClickListener {            val bundle = Bundle()            bundle.putSerializable("user", it)            bundle.putString("type", "user")            navController.navigate(R.id.action_listChatFragment_to_chatFragment, bundle)        }        requireActivity().btnImageProfile.setOnClickListener {            navController.navigate(R.id.action_listChatFragment_to_profileFragment)        }        btnCreateGroup.setOnClickListener {            val createDialog = CreateGenreDialog()            createDialog.show(requireActivity().supportFragmentManager, "")        }    }}